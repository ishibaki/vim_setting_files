#  _____     ______     __     __   __
# /\  __-.  /\  ___\   /\ \   /\ "-.\ \
# \ \ \/\ \ \ \  __\   \ \ \  \ \ \-.  \
#  \ \____-  \ \_____\  \ \_\  \ \_\\"\_\
#   \/____/   \/_____/   \/_/   \/_/ \/_/

[[plugins]] # plugin manager
repo = 'Shougo/dein.vim'

[[plugins]] # Unite User Interface
repo = 'Shougo/unite.vim'
hook_add = '''
    nnoremap [unite] <Nop>
    nmap <Leader>u [unite]
    nmap <Leader>u<CR> :Unite -vertical<CR>
    nnoremap <silent> [unite]u :<C-u>Unite<Space>file -vertical<CR>
    nnoremap <silent> [unite]g :<C-u>Unite<Space>grep<CR>
    nnoremap <silent> [unite]f :<C-u>Unite<Space>buffer -vertical<CR>
    nnoremap <silent> [unite]b :<C-u>Unite<Space>bookmark -vertical<CR>
    nnoremap <silent> [unite]a :<C-u>UniteBookmardAdd<CR>
    nnoremap <silent> [unite]h :<C-u>Unite<Space>history/yank<CR>
'''

[[plugins]] # colorscheme
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'Shougo/neocomplete.vim'

[[plugins]] # ステータスライン
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
    \   'colorscheme': 'wombat'
    \ }
'''

[[plugins]] # 括弧の操作を楽にする
repo = 'tpope/vim-surround'

[[plugins]] # 行末の不要な半角スペースを可視化
repo = 'bronson/vim-trailing-whitespace'

[[plugins]] # インデントによる階層を分かりやすく可視化
repo = 'nathanaelkane/vim-indent-guides'

[[plugins]] # CSVなどの成型に
repo = 'junegunn/vim-easy-align'
# ビジュアルモードで選択し，easy-align 呼んで整形．(e.g. vip<Enter>)
# easy-align を呼んだ上で，移動したりテキストオブジェクトを指定して整形．(e.g. gaip)
hook_add = '''
    vmap <Enter> <Plug>(EasyAlign)
    nmap ga <Plug>(EasyAlign)
'''

[[plugins]] # diffsplitが便利になるよ
repo = 'chrisbra/vim-diff-enhanced'

[[plugins]] # 日本語IMEに影響しない括弧補完
repo = 'itmammoth/doorboy.vim'
hook_add = '''
    let g:doorboy_additional_quotations = {
    \ 'markdown': ['*'],
    \ }
'''

[[plugins]] # vim内移動用
repo = 'easymotion/vim-easymotion'
# EasyMotionのleader keyを<Space>fにする
# fコマンドを，easymotionのfモードにする
hook_add = '''
    let g:EasyMotion_leader_key = '<Space>f'
    let g:EasyMotion_use_migemo = 1
    nmap <Space>ff <Plug>(easymotion-overwin-f)
    nmap <Space>fs <Plug>(easymotion-overwin-f2)
    nmap <Space>ft <Plug>(easymotion-bd-t)
    nmap <Space>f/ <Plug>(easymotion-sn)
    nmap <Space>j  <Plug>(easymotion-bd-jk)
    nmap <Space>k  <Plug>(easymotion-bd-jk)
    nmap <Space>fw <Plug>(easymotion-bd-w)
    nmap <Space>fW <Plug>(easymotion-bd-W)
    nmap <Space>fe <Plug>(easymotion-bd-e)
    nmap <Space>fE <Plug>(easymotion-bd-E)
'''

[[plugins]] # vim上でプログラムの非同期実行
repo = 'thinca/vim-quickrun'
# <Leader>rで実行されるのでよろしく

[[plugins]] # アウトラインの自動作成
repo = 'Shougo/unite-outline'
hook_add = '''
    nmap <Leader>ol :Unite outline -vertical<CR>
'''

[[plugins]] # vim-table-mode
repo = 'dhruvasagar/vim-table-mode'
# markdownのときにはマークダウン文法の表形式に変更
hook_add = '''
    augroup vimTableMode
        autocmd!
        autocmd BufNewFile,BufRead *.{md,mkd,mkdn,mdown,markdown} let g:table_mode_corner='|'
    augroup END
'''

[[plugins]] # テンプレート作成
repo = 'mattn/sonictemplate-vim'

[[plugins]] # チートシート呼び出し
repo = 'reireias/vim-cheatsheet'
hook_add = '''
    let g:cheatsheet#cheat_file = '~/.cheatsheet.md'
'''

[[plugins]] # ファイルツリー
repo = 'scrooloose/nerdtree'
hook_add = '''
    nmap <Leader>t<CR> :NERDTreeToggle<CR>
    let NERDTreeShowBookmarks = 1
    let NERDTreeShowHidden = 1
    nnoremap <silent><C-s> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'mrtazz/simplenote.vim'
# ~/.simplenotercを準備すること
hook_add = '''
    source ~/.simplenoterc
    let g:SimplenoteFiletype = 'markdown'

    :function! SimplenoteMemoFunc()
        :SimplenoteOpen 0ea6ef57f1b5aeba17939b88039f1cd4
        if getline("$") != ""
            :call append(line("$"), "")
        endif
        :call append(line("$"), "---")
        :call append(line("$"), "")
        :let now_time = strftime("%Y/%m/%d %H:%M:%S", localtime())
        :call append(line("$"), "## " . now_time)
        :call append(line("$"), "")
        :normal G
        :PrevimOpen
        :2quit
    :endfunction

    command Memo :call SimplenoteMemoFunc()
    command Note :call SimplenoteMemoFunc()
'''

[[plugins]] # Text objectを新しく設定できる
repo = 'kana/vim-textobj-user'

[[plugins]] # indentの中身をモーション範囲に
repo = 'kana/vim-textobj-indent'

[[plugins]] # その行をモーション範囲に
repo = 'kana/vim-textobj-line'

# [[plugins]] # a converter of camelCase, snake_case, and other cases
# repo = 'tpope/vim-abolish'

# [[plugins]] # 英語単語の自動補完
# repo = 'ujihisa/neco-look'
# on_i = 1
# depends = 'neocomplete.vim'

# [[plugins]] # メモ用プラグイン
# repo = 'glidenote/memolist.vim'

# git clone 後、実行すべきコマンドがある場合はこんな感じ
# [[plugins]]
# repo = 'Shougo/vimproc.vim'
# hook_post_update = '''
#   if dein#util#_is_windows()
#     let cmd = 'tools\\update-dll-mingw'
#   elseif dein#util#_is_cygwin()
#     let cmd = 'make -f make_cygwin.mak'
#   elseif executable('gmake')
#     let cmd = 'gmake'
#   else
#     let cmd = 'make'
#   endif
#   let g:dein#plugin.build = cmd
# '''

# ブランチやタグを指定したいとき
# [[plugins]]
# repo = 'delphinus35/typescript-vim'
# rev  = 'colorize-template-strings'

# 特定の条件で読み込みたいとき
# [[plugins]]
# repo = 'elzr/vim-json'
# if   = '''! has('kaoriya')'''

# [[plugins]] # :CalendarでGoogleカレンダーを開けます
# repo = 'itchyny/calendar.vim'
# hook_add = '''
#     let g:calendar_google_calendar = 1
#     let g:calendar_first_day = 'monday'
# '''

# [[plugins]]
# repo = 'yuratomo/w3m.vim'

# [[plugins]] # <C-a>,<C-x>でleft<->rightなど対義語変換, zef/vim-cycleよりfork
# repo = 'ishibaki/vim-cycle'

# [[plugins]] # カラースキーム
# repo = 'w0ng/vim-hybrid'
# hook_add = '''
#     let g:hybrid_reduced_contrast = 0
# '''

# [[plugins]] # コードブロックでvim内移動
# repo = 'haya14busa/vim-edgemotion'
# hook_add = '''
#     map <C-j> <Plug>(edgemotion-j)
#     map <C-k> <Plug>(edgemotion-k)
# ''' 
